BootStrap: docker
From: ubuntu:22.04

%help
    Container with Miniforge3 and AnnPipe.
    Build: apptainer build annpipe.sif annpipe.def
    Use the --sandbox option optionally.

%environment
    . /opt/miniforge3/bin/activate AnnPipe
    export PATH=/opt/miniforge3/bin/:/opt/miniforge3/envs/AnnPipe/lib/:/opt/miniforge3/envs/AnnPipe/lib/jvm/lib:$PATH
    export LD_LIBRARY_PATH=/opt/miniforge3/envs/AnnPipe/lib/:/opt/miniforge3/envs/AnnPipe/lib/jvm/lib:${LD_LIBRARY_PATH}
    export PATH=/opt/make_lastz_chains:$PATH
    export PATH=/opt/TOGA:$PATH
    export PATH=/opt/postoga:$PATH

%post
    apt-get update && apt-get install -y \
        curl \
        wget \
        git \
        build-essential

    # Install Conda
    wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh -O miniforge3.sh
    bash miniforge3.sh -b -p /opt/miniforge3
    rm miniforge3.sh

    # Create Conda environment and install required packages
    /opt/miniforge3/bin/mamba create -n AnnPipe -c conda-forge -c bioconda \
        python=3.9 \
        nextflow \
        twobitreader \
        lastz \
        ucsc-axtchain \
        ucsc-twoBitToFa \
        ucsc-faToTwoBit \
        ucsc-chainAntiRepeat \
        ucsc-chainMergeSort \
        ucsc-chainSort \
        ucsc-chainNet \
        ucsc-axtToPsl \
        ucsc-chainFilter \
        bcbio-gff \
        gffread \
        bed2gff -y
    
    # Activate Conda environment
    . /opt/miniforge3/bin/activate AnnPipe

    # Install Mahajrod packages
    pip install py_nf
    pip install --editable=git+https://github.com/mahajrod/MAVR.git#egg=MAVR
    pip install --editable=git+https://github.com/mahajrod/RouToolPa.git#egg=RouToolPa
    

    # Install make_lastz_chains
    git clone https://github.com/hillerlab/make_lastz_chains.git /opt/make_lastz_chains
    cd /opt/make_lastz_chains
    pip install -r requirements.txt
    ./install_dependencies.py
    cd /
    ln -s /lib/x86_64-linux-gnu/libtic.so.6.3 /lib/x86_64-linux-gnu/libtinfow.so.6

    # Install TOGA
    git clone https://github.com/hillerlab/TOGA.git /opt/TOGA
    cd /opt/TOGA
    pip install -r requirements.txt
    ./configure.sh --override
    cd /

    # Install post-TOGA
    git clone --recursive https://github.com/alejandrogzi/postoga.git /opt/postoga
    cd /opt/postoga
    sed -i "s/curl --proto '=https' --tlsv1.2 -sSf https:\/\/sh.rustup.rs | sh/curl --proto '=https' --tlsv1.2 -sSf https:\/\/sh.rustup.rs | sh  -s -- -y/" configure.sh
    ./configure.sh
    cd /

    # Clean up
    mamba clean -a -y
    apt-get autoremove -y && apt-get clean

%runscript
    echo "Container was created $NOW"
    echo "Arguments received: $*"
    exec "$@"

%labels
    Authors: Mahajrod, Tomarovsky
    Version: v0.1



